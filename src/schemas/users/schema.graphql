extend type Mutation {
  createUser(input: CreateUserInput!): [User]!
  updateUser(id: ID!, input: UpdateUserInput!): [User]!
  deleteUser(id: ID!): [User]!
  addUserProducts(id: ID!, productsIds: [ID!]!): [User]!
  removeUserProducts(id: ID!, productsIds: [ID!]!): [User]!
}

extend type Query {
  user(id: ID!): User
  users: [User!]!
  me: User
  secure: String
}

enum Status {
  ACTIVE
  INACTIVE
}

type User {
  id: ID!
  name: String!
  email: Email!
  age: Int!
  wage: Float!
  admin: Boolean!
  custom: String!
  createdAt: Date!
  updatedAt: Date!
  products: [Product!]!
  status: Status!
}

input CreateUserInput {
  name: String!
  email: Email!
  age: Int!
  wage: Float!
  admin: Boolean
  status: Status
}

input UpdateUserInput {
  name: String
  email: Email
  age: Int
  wage: Float
  admin: Boolean
  custom: String
  status: Status
}
